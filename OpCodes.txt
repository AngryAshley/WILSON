00 HLT #Halts shit
FF HLT #Also halts shit

01 LDA #load next byte from address in register A
02 LDB #load next byte from address in register B
03 LDH #load next byte from hi-memory address in register A
04 RES

05 ADD #Adds A and B together, stores the result in A
06 SUB #Subtracts A from B, stores the result in A
07 STO #Store register A to address from next byte
08 STH #Store register A to hi-memory address from next two bytes 

09 JMP #Jumps to memory address from next byte
0A JEZ #Jumps to memory address from next byte if Register A is equal to zero
0B JEQ #Jumps to memory address from next byte if register A is equal to register B
0C JC  #Jumps to memory address from next byte if the carry flag is set
0D JP  #Jumps to memory address from next byte if register A is a positive integer
0E RES
0F RES

10 INT #Sends an interrupt signal to device address from next byte, then sends the byte after that to the device
11 WFI #Waits for an interrupt and stores the byte from the bus to the address from next byte
12 IN
